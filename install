#!/bin/bash

# RC files

cd "$(dirname "${BASH_SOURCE[0]}")" || exit 1

# git-prompt
if [ ! -e ~/.git-prompt.sh ]; then
  curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -o ~/.git-prompt.sh
fi

BASE=$(pwd)
for rc in *rc tmux.conf alacritty.yml; do
  mkdir -pv bak
  [ -e ~/."$rc" ] && mv -v ~/."$rc" bak/."$rc"
  ln -sfv "$BASE/$rc" ~/."$rc"
done

git config --global user.email "jkunlin@gmail.com"
git config --global user.name "jkunlin"

if [ ! -e ~/.tmux/plugins/tpm ]; then
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  tmux source-file ~/.tmux.conf
fi


# install softwares
#######################################################################
if [ ! -e ~/bin ]; then
mkdir -p ~/bin
fi

if [ ! -e ~/.local ]; then
	mkdir -p ~/.local
fi
mkdir -p $BASE/tmp

# fd
if ! command -v fd 2>/dev/null; then
  curl --insecure -fLo $BASE/tmp/fd_7.3.0_amd64.deb https://github.com/sharkdp/fd/releases/download/v7.3.0/fd_7.3.0_amd64.deb
  dpkg -x $BASE/tmp/fd_7.3.0_amd64.deb $BASE/tmp
  cp $BASE/tmp/usr/bin/fd ~/bin
fi

# rg
if ! command -v rg 2>/dev/null; then
  curl --insecure -fLo $BASE/tmp/ripgrep_0.10.0_amd64.deb https://github.com/BurntSushi/ripgrep/releases/download/0.10.0/ripgrep_0.10.0_amd64.deb
  dpkg -x $BASE/tmp/ripgrep_0.10.0_amd64.deb $BASE/tmp
  cp $BASE/tmp/usr/bin/rg ~/bin
fi

# parallel
if ! command -v parallel 2>/dev/null; then
  curl --insecure -f http://pi.dk/3/ | bash
  rm parallel* -r
fi

# cmake
if [ ! -e ~/.local/bin/cmake ]; then
  curl --insecure -fLo $BASE/tmp/cmake-3.14.0-rc3-Linux-x86_64.sh https://github.com/Kitware/CMake/releases/download/v3.14.0-rc3/cmake-3.14.0-rc3-Linux-x86_64.sh
  sh $BASE/tmp/cmake-3.14.0-rc3-Linux-x86_64.sh --prefix=$HOME/.local
fi

# llvm + clang
if [ ! -e ~/.local/bin/clang ]; then
	cd $BASE/tmp
  wget -c http://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz
  tar xf clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz
  if [ ! -e ~/.local/bin ]; then
    mkdir ~/.local/bin
  fi
  mv clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04/bin/* ~/.local/bin

  if [ ! -e ~/.local/include  ]; then
    mkdir ~/.local/include
  fi
  mv clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04/include/* ~/.local/include

  if [ ! -e ~/.local/lib ]; then
    mkdir ~/.local/lib
  fi
  mv clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04/lib/* ~/.local/lib


  if [ ! -e ~/.local/libexec ]; then
    mkdir ~/.local/libexec
  fi
  mv clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04/libexec ~/.local/libexec

  if [ ! -e ~/.local/share ]; then
    mkdir ~/.local/share
  fi
  mv clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04/share ~/.local/share
fi

# ncurse
if [ ! -e ~/.local/include/ncurses ]; then
  cd $BASE/tmp
  wget ftp://ftp.invisible-island.net/ncurses/ncurses.tar.gz
  tar xzf ncurses.tar.gz
  cd  $(fd --maxdepth 1 ncur -t d)
  ./configure --prefix=$HOME/.local
  make -j
  make install
  cd ../..
fi

# zlib
if [ ! -e ~/.local/include/zlib.h ]; then
  cd $BASE/tmp
  wget https://www.zlib.net/zlib-1.2.11.tar.gz
  tar xzf zlib-1.2.11.tar.gz
  cd zlib-1.2.11
  ./configure --prefix=$HOME/.local
  make -j
  make install
  cd ../..
fi

# ccls
if [ ! -e ~/.local/bin/ccls ]; then
  cd $BASE/tmp
  git clone --depth=1 --recursive https://github.com/MaskRay/ccls
  cd ccls
  cmake -H. -BRelease -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/.local
  cmake --build Release
  cmake --build Release --target install
  cd ../..
fi

# pip
if ! command -v pip 2>/dev/null; then
  if command -v python3 2>/dev/null; then
    curl --insecure -fLo $BASE/tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py
    python3 $BASE/tmp/get-pip.py --user
  elif command -v python2 2>/dev/null; then
    curl --insecure -fLo $BASE/tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py
    python $BASE/tmp/get-pip.py --user
  fi
fi

# node
if ! command -v node 2>/dev/null; then
  curl -sL install-node.now.sh/lts | sh -s -- --prefix=$HOME/.local
fi

# yarn
if ! command -v yarn 2>/dev/null; then
  curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
fi


rm -rf $BASE/tmp

# neovim
./vim/install-vim
